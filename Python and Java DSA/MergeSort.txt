----Java Code----
void merge(int arr[], int l, int m, int r)
    {
        int n1 = m - l + 1;
        int n2 = r - m;

        int L[] = new int[n1];
        int R[] = new int[n2];

        for (int i = 0; i < n1; ++i)
            L[i] = arr[l + i];
        for (int j = 0; j < n2; ++j)
            R[j] = arr[m + 1 + j];
 
        int i = 0, j = 0;

        int k = l;
        while (i < n1 && j < n2) {
            if (L[i] <= R[j]) {
                arr[k] = L[i];
                i++;
            }
            else {
                arr[k] = R[j];
                j++;
            }
            k++;
        }

        while (i < n1) {
            arr[k] = L[i];
            i++;
            k++;
        }

        while (j < n2) {
            arr[k] = R[j];
            j++;
            k++;
        }
    }

    void sort(int arr[], int l, int r)
    {
        if (l < r) {

            int m =l+ (r-l)/2;

            sort(arr, l, m);
            sort(arr, m + 1, r);

            merge(arr, l, m, r);
        }
    }



----Python Code----
    def mergeSort(self,array):
        
        if len(array)<=1:
            return array
        first=0
        last=len(array)-1
        pvalue=array[(first+last)//2]
        pindex=(first+last)//2
        
        greater_array=[]
        lesser_array=[]
        array.pop(pindex)
        
        for i in array:
            if i>pvalue:
                
                greater_array.append(i)
            else:
                
                lesser_array.append(i)
        return self.mergeSort(lesser_array)+[pvalue]+self.mergeSort(greater_array)