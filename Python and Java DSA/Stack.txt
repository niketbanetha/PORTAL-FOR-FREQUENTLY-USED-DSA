----Java Code----
class Stack {
    static final int MAX = 1000;
    int top;
    int a[] = new int[MAX];
 
    boolean isEmpty()
    {
        return (top < 0);
    }
    Stack()
    {
        top = -1;
    }
 
    boolean push(int x)
    {
        if (top >= (MAX - 1)) {
            System.out.println("Stack Overflow");
            return false;
        }
        else {
            a[++top] = x;
            System.out.println(x + " pushed into stack");
            return true;
        }
    }
 
    int pop()
    {
        if (top < 0) {
            System.out.println("Stack Underflow");
            return 0;
        }
        else {
            int x = a[top--];
            return x;
        }
    }
 
    int peek()
    {
        if (top < 0) {
            System.out.println("Stack Underflow");
            return 0;
        }
        else {
            int x = a[top];
            return x;
        }
    }
}
}


-----Python Code----

class Stack():
    def __init__(self):
        self.stack=[]
    
    def push(self,item):
        self.stack.append(item)
    
    def pop(self):
        if len(self.stack)==0:
            return None
        return self.stack.pop()
        

    def peek(self):
        if len(self.stack)==0:
            return None
		return self.stack[-1]
        
    
    def isEmpty(self):
        if len(self.stack)==0:
            return True
        return False


